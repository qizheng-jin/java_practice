package load_static_files;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import java.net.Socket;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class HttpResponse {
	private Socket socket;
	private File entity;
	private int statusCode = 200;
	private String statusReason = "OK";
	private Map<String, String> headers = new HashMap<String, String>();
	
	public HttpResponse(Socket socket) {
		this.socket = socket;
	}
	
	public void flush() {
		sendLine();
		sendHeaders();
		sendContent();
	}
	
	private void sendLine() {
		String line = "HTTP/1.1 " + statusCode + statusReason;
		try {
			writeIntoSocket(line);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private void sendHeaders() {
		try {
			Set<Map.Entry<String, String>> set = headers.entrySet();
			for(Map.Entry<String, String> e: set) {
				String name = e.getKey();
				String value = e.getValue();
				String line = name + ":" + value;
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private void sendContent() {
		System.out.println("发送响应正文");
		try {
			FileInputStream fis = new FileInputStream(entity);
			OutputStream out = socket.getOutputStream();
			int len;
			byte[] data = new byte[10*1024];
			while((len=fis.read(data)) !=-1) {
				out.write(data, 0, len);
				String html = new String(data, "UTF-8");
				System.out.println(html);
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("响应正文发送完毕");
	}
	
	private void writeIntoSocket(String line) throws IOException {
		OutputStream out = socket.getOutputStream();
		byte[] data = line.getBytes();
		out.write(data);
		out.write(13);
		out.write(10);

	}

	public void setEntity(File entity) {
		this.entity = entity;
	}

	public void setStatusCode(int statusCode) {
		this.statusCode = statusCode;
	}

	public void setStatusReason(String statusReason) {
		this.statusReason = statusReason;
	}

	public void putHeaders(String key, String value) {
		headers.put(key, value);
	}
	
	
}
